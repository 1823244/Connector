
Процедура ВыполнитьТестыНаСервере() Экспорт
	
	Тест_GetРезультатКакJson();
	Тест_GetРезультатКакДвоичныеДанные();
	Тест_GetРезультатКакПоток();
	Тест_GetРезультатКакСтрока();
	Тест_GetПроизвольныеЗаголовки();
	Тест_GetПараметры();
	//Тест_GetУспешнийРедирект();
	//Тест_GetЗацикленныйРедирект();
	//Тест_GetОтключенныйРедирект();
	
	Тест_Options();
	Тест_Head();
	Тест_PutПараметры();
	Тест_Delete();
	Тест_Patch();
	Тест_PostПараметры();
	
	Тест_Ошибка404();
	Тест_POST_x_www_form_urlencoded();
	Тест_POST_json();
	
	Тест_Таймаут();
	
КонецПроцедуры

#Область Тесты

Процедура Тест_GetРезультатКакJson()
	
	Результат = Requests.РезультатКакJson(Requests.Get("http://httpbin.org/get"));
	
	УтверждениеВерно(Результат["url"], "http://httpbin.org/get");
	
КонецПроцедуры

Процедура Тест_GetРезультатКакДвоичныеДанные()
	
	Результат = Requests.РезультатКакДвоичныеДанные(Requests.Get("http://httpbin.org/image/png"), Ложь);
	
	УтверждениеВерно(ТипЗнч(Результат), Тип("ДвоичныеДанные"));
	УтверждениеВерно(ПосчитатьMD5(Результат), "5cca6069f68fbf739fce37e0963f21e7");
	
КонецПроцедуры

Процедура Тест_GetРезультатКакПоток()
	
	Результат = Requests.РезультатКакДвоичныеДанные(Requests.Get("http://httpbin.org/image/png"), Истина);
	
	УтверждениеВерно(ТипЗнч(Результат), Тип("Поток"));
	УтверждениеВерно(ПосчитатьMD5(Результат), "5cca6069f68fbf739fce37e0963f21e7");
	
КонецПроцедуры

Процедура Тест_GetРезультатКакСтрока()
	
	Результат = Requests.РезультатКакТекст(Requests.Get("http://httpbin.org/encoding/utf8"));
	
	УтверждениеВерно(СтрНайти(Результат, "Зарегистрируйтесь сейчас на Десятую Международную"), 3931);
	
КонецПроцедуры

Процедура Тест_GetПроизвольныеЗаголовки()
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("X-My-Header", "Hello!!!");
	Результат = Requests.РезультатКакJson(Requests.Get("http://httpbin.org/headers",, Новый Структура("Заголовки", Заголовки)));
	
	УтверждениеВерно(Результат["headers"]["X-My-Header"], "Hello!!!");
	
КонецПроцедуры

Процедура Тест_GetПараметры()
	
	ПараметрыЗапроса = Новый Структура("key1, key2", "value1", "значение2");	
	Результат = Requests.РезультатКакJson(Requests.Get("http://httpbin.org/get", ПараметрыЗапроса));
	
	УтверждениеВерно(Результат["args"]["key1"], "value1");
	УтверждениеВерно(Результат["args"]["key2"], "значение2");
	
КонецПроцедуры

Процедура Тест_GetУспешнийРедирект()
	
	Ответ = Requests.Get("http://httpbin.org/redirect/6");
	Результат = Requests.РезультатКакJson(Ответ);
	
	УтверждениеВерно(Ответ.КодСостояния, 200);
	УтверждениеВерно(Результат["url"], "http://httpbin.org/get");
	
КонецПроцедуры

Процедура Тест_GetЗацикленныйРедирект()
	
	Попытка
		Результат = Requests.РезультатКакJson(Requests.Get("http://httpbin.org/redirect/31"));
	Исключение
		ВерноеИсключение(ИнформацияОбОшибке(), "СлишкомМногоПеренаправлений");
	КонецПопытки;
	
КонецПроцедуры

Процедура Тест_GetОтключенныйРедирект()
	
	Параметры = Новый Структура("РазрешитьПеренаправление", Ложь);	
	Ответ = Requests.Get("http://httpbin.org/redirect-to?url=http%3A%2F%2Fhttpbin.org%2Fget&status_code=307",, Параметры);
	Результат = Requests.РезультатКакJson(Ответ);
	
	УтверждениеВерно(Ответ.КодСостояния, 307);
	
КонецПроцедуры

Процедура Тест_Options()
	
	Ответ = Requests.Options("http://httpbin.org/anything");
	
	УтверждениеВерно(Ответ.КодСостояния, 200);
	
КонецПроцедуры

Процедура Тест_Head()
	
	Ответ = Requests.Head("http://httpbin.org/anything");
	
	УтверждениеВерно(Ответ.КодСостояния, 200);
	
КонецПроцедуры

Процедура Тест_Delete()
	
	Ответ = Requests.Delete("http://httpbin.org/delete");
	
	УтверждениеВерно(Ответ.КодСостояния, 200);
	
КонецПроцедуры

Процедура Тест_Patch()
	
	Ответ = Requests.Patch("http://httpbin.org/patch");
	
	УтверждениеВерно(Ответ.КодСостояния, 200);
	
КонецПроцедуры

Процедура Тест_PutПараметры()
	
	Ответ = Requests.Put("http://httpbin.org/put",, Новый Структура("ПараметрыЗапроса", Новый Структура("key1, key2", "value1", "значение2")));
	Результат = Requests.РезультатКакJson(Ответ);
	
	УтверждениеВерно(Ответ.КодСостояния, 200);
	УтверждениеВерно(Ответ.URL, "http://httpbin.org/put?key1=value1&key2=%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B52");
	
КонецПроцедуры

Процедура Тест_PostПараметры()
	
	Ответ = Requests.Post("http://httpbin.org/post",,, Новый Структура("ПараметрыЗапроса", Новый Структура("key1, key2", "value1", "значение2")));
	Результат = Requests.РезультатКакJson(Ответ);
	
	УтверждениеВерно(Ответ.КодСостояния, 200);
	УтверждениеВерно(Ответ.URL, "http://httpbin.org/post?key1=value1&key2=%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B52");
	
КонецПроцедуры

Процедура Тест_Ошибка404()
	
	Ответ = Requests.Get("http://httpbin.org/status/404");
	
	УтверждениеВерно(Ответ.КодСостояния, 404);
	
КонецПроцедуры

Процедура Тест_POST_x_www_form_urlencoded()
	
	Данные = Новый Структура;
	Данные.Вставить("comments", "Постучать в дверь");
	Данные.Вставить("custemail", "vasya@mail.ru");
	Данные.Вставить("custname", "Вася");
	Данные.Вставить("custtel", "112");
	Данные.Вставить("delivery", "20:20");
	Данные.Вставить("size", "medium");
	Данные.Вставить("topping", СтрРазделить("bacon,mushroom", ","));
	
	Ответ = Requests.Post("http://httpbin.org/post", Данные);
	УтверждениеВерно(Ответ.URL, "http://httpbin.org/post");
	Результат = Requests.РезультатКакJson(Ответ);
	УтверждениеВерно(Результат["form"]["size"], "medium");
	УтверждениеВерно(Результат["form"]["comments"], "Постучать в дверь");
	УтверждениеВерно(Результат["form"]["custemail"], "vasya@mail.ru");
	УтверждениеВерно(Результат["form"]["delivery"], "20:20");
	УтверждениеВерно(Результат["form"]["custtel"], "112");	
	УтверждениеВерно(Ответ.Запрос.Заголовки.Получить("Content-Type"), "application/x-www-form-urlencoded");	
	
КонецПроцедуры

Процедура Тест_POST_json()
	
	Json = Новый Структура;
	Json.Вставить("key1", "value1");
	Json.Вставить("key2", "значение2");
	
	Ответ = Requests.Post("http://httpbin.org/post",, Json);
	Результат = Requests.РезультатКакJson(Ответ);
	УтверждениеВерно(Результат["json"]["key1"], "value1");
	УтверждениеВерно(Результат["json"]["key2"], "значение2");
	УтверждениеВерно(Ответ.Запрос.Заголовки.Получить("Content-Type"), "application/json");	

КонецПроцедуры

Процедура Тест_Таймаут()

	Попытка
		Ответ = Requests.Get("https://httpbin.org/delay/10",, Новый Структура("Таймаут", 1));
	Исключение
		ВерноеИсключение(ИнформацияОбОшибке(), "Превышено время ожидания");
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПосчитатьMD5(Данные)
	
	Хеширование = Новый ХешированиеДанных(ХешФункция.MD5);
	Хеширование.Добавить(Данные);
	
	Возврат НРег(ПолучитьHexСтрокуИзДвоичныхДанных(Хеширование.ХешСумма));
	
КонецФункции

Процедура УтверждениеВерно(ЛевоеЗначение, ПравоеЗначение, Пояснение = "")
	
	Если ЛевоеЗначение <> ПравоеЗначение Тогда
		ВызватьИсключение(СтрШаблон("<%1> не равно <%2>: %3", ЛевоеЗначение, ПравоеЗначение, Пояснение));
	КонецЕсли;
	
КонецПроцедуры

Процедура ВерноеИсключение(ИнформацияОбОшибке, ОжидаемоеИсключение)
	
	Если Не СтрНайти(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке), ОжидаемоеИсключение) Тогда
		ВызватьИсключение(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти